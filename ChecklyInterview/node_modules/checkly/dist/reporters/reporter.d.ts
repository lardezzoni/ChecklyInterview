import { TestResultsShortLinks } from '../rest/test-sessions';
import { RunLocation, SequenceId } from '../services/abstract-check-runner';
export interface Reporter {
    onBegin(checks: Array<{
        check: any;
        sequenceId: SequenceId;
    }>, testSessionId?: string): void;
    onCheckInProgress(check: any, sequenceId: SequenceId): void;
    onCheckAttemptResult(sequenceId: SequenceId, checkResult: any, links?: TestResultsShortLinks): void;
    onCheckEnd(sequenceId: SequenceId, checkResult: any, testResultId?: string, links?: TestResultsShortLinks): void;
    onEnd(): void;
    onError(err: Error): void;
    onSchedulingDelayExceeded(): void;
}
export type ReporterType = 'list' | 'dot' | 'ci' | 'github' | 'json';
export declare const createReporters: (types: ReporterType[], runLocation: RunLocation, verbose: boolean) => Reporter[];
