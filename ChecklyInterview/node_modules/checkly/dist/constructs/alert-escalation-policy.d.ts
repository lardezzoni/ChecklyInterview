declare enum AlertEscalationType {
    RUN = "RUN_BASED",
    TIME = "TIME_BASED"
}
export type Reminders = {
    amount?: number;
    interval?: number;
};
export type ParallelRunFailureThreshold = {
    enabled?: boolean;
    percentage?: number;
};
export interface AlertEscalation {
    escalationType?: AlertEscalationType;
    runBasedEscalation?: {
        failedRunThreshold?: number;
    };
    timeBasedEscalation?: {
        minutesFailingThreshold?: number;
    };
    reminders?: Reminders;
    parallelRunFailureThreshold?: ParallelRunFailureThreshold;
}
export type AlertEscalationOptions = Pick<AlertEscalation, 'runBasedEscalation' | 'timeBasedEscalation' | 'reminders' | 'parallelRunFailureThreshold'>;
export declare class AlertEscalationBuilder {
    private static DEFAULT_RUN_BASED_ESCALATION;
    private static DEFAULT_TIME_BASED_ESCALATION;
    private static DEFAULT_REMINDERS;
    private static DEFAULT_PARALLEL_RUN_FAILURE_THRESHOLD;
    static runBasedEscalation(failedRunThreshold: number, reminders?: Reminders, parallelRunFailureThreshold?: ParallelRunFailureThreshold): AlertEscalation;
    static timeBasedEscalation(minutesFailingThreshold: number, reminders?: Reminders, parallelRunFailureThreshold?: ParallelRunFailureThreshold): AlertEscalation;
    private static alertEscalation;
}
export {};
