import AbstractCheckRunner, { RunLocation, SequenceId } from './abstract-check-runner';
import { GitInformation } from './util';
import { Check } from '../constructs/check';
import { RetryStrategy, Project } from '../constructs';
export default class TestRunner extends AbstractCheckRunner {
    project: Project;
    checkConstructs: Check[];
    location: RunLocation;
    shouldRecord: boolean;
    repoInfo: GitInformation | null;
    environment: string | null;
    updateSnapshots: boolean;
    baseDirectory: string;
    testRetryStrategy: RetryStrategy | null;
    constructor(accountId: string, project: Project, checks: Check[], location: RunLocation, timeout: number, verbose: boolean, shouldRecord: boolean, repoInfo: GitInformation | null, environment: string | null, updateSnapshots: boolean, baseDirectory: string, testRetryStrategy: RetryStrategy | null);
    scheduleChecks(checkRunSuiteId: string): Promise<{
        testSessionId?: string;
        checks: Array<{
            check: any;
            sequenceId: SequenceId;
        }>;
    }>;
    processCheckResult(result: any): Promise<void>;
}
